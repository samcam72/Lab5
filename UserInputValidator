public class UserInputValidator {
    public static String validateName(String name) throws InvalidInputException {
        if (name == null || name.trim().isEmpty()) {
            throw new InvalidInputException("Name cannot be empty.");
        }
        return name;
    }

    public static int validateAge(String input) throws InvalidInputException {
        try {
            int age = Integer.parseInt(input);
            if (age < 0) {
                throw new InvalidInputException("Age must be a non-negative integer.");
            }
            return age;
        } catch (NumberFormatException e) {
            throw new InvalidInputException("Age must be a valid number.");
        }
    }

    public static String validateEmail(String email) throws InvalidInputException {
        if (email.contains("@") && (email.endsWith(".com") || email.endsWith(".edu"))) {
            return email;
        }
        throw new InvalidInputException("Email must contain '@' and end with '.com' or '.edu'.");
    }

    public static String validatePhone(String phone) throws InvalidInputException {
        if (phone.matches("\\d{10}")) {
            return phone;
        }
        throw new InvalidInputException("Phone number must be exactly 10 digits.");
    }
}

